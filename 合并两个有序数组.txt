void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n)
{
    //1.利用for进行遍历每遇到nums1中的数大于nums2中的数就把数组向后移动。时间复杂度：   O（N*M）
    //2.把nums2放进nums1中再对nums1进行排序。最小时间复杂度：O（log2N)
//3.新开辟一段内存空间，分别用双下标指向nums1与nums2把两数中最小的放进新开辟的数组中.时间复杂度：O（M+N）
//4.用双指针分别指向两数组的末端,倒着给nums1赋值,选取两数中最大的赋值给数组中以此类推不断往前移动
        int end1=m-1;
        int end2=n-1;
        int end=m+n-1;
        while(end1 >=0 && end2 >= 0)
        {
            if(nums1[end1]>nums2[end2])
            {
                nums1[end--]=nums1[end1--];
            }
            else
            {
                nums1[end--]=nums2[end2--];
            }
        }
        if(end1<0)
        {
            while(end2 >=0)
            {
                nums1[end--]=nums2[end2--];
            }
        }
        else if(end2 < 0)
        {
            while(end1 >= 0)
            {
                nums1[end--]=nums1[end1--];
            }
        }
}    