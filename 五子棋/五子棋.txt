#include<stdio.h>
#include<math.h>
#include "game.h"
#include<stdlib.h>
int full(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		int j = 0;
		for (j = 0; j < col; j++)
		{
			if (board[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}
char iswin(char board[ROW][COL], int row, int col)
{
	//return '*'玩家赢
	//return '#'电脑赢
	//return 'Q'平局
	//return 'C'继续
	int i = 0;
	for (i = 0; i < row; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][1] != ' ')
			return board[i][0];
	}
	for (i = 0; i < col; i++)
	{
		if (board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[1][i] != ' ')
			return board[0][i];
	}
	if (board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[1][1] != ' ')
		return board[1][1];
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[1][1] != ' ')
		return board[1][1];
	if (1 == full(board, ROW, COL))
	{
		return 'Q';
	}
	else
		return 'C';
		
}
void botstep(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("电脑走：\n");
		x = rand() % 3;
		y = rand() % 3;
		if (board[x][y] == ' ')
		{
			board[x][y] = '#';
			break;
		}
	}

}
void playerstep(char board[ROW][COL], int row, int col)
{
	int x = 0;
	int y = 0;
	while (1)
	{
		printf("请输入坐标：");
		scanf_s("%d %d", &x, &y);
		if (x >= 1 && x <= row && y >= 1 && y <= col)
		{
			if (board[x-1][y-1] == ' ')
			{
				board[x-1][y-1] = '*';
				break;
			}
			else
			{
				printf("空间已被占请重新输入\n");
			}
		}
		else
		{
			printf("输入错误请重试\n");
		}
	}
}
void displayboard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < row; i++)
	{
		int j = 0;
		for (j = 0; j < col; j++)		//打印每行数字
		{
			printf(" %c ", board[i][j]);
			if (j < col - 1)
				printf("|");
		}
		printf("\n");
		if (i < row - 1)
		{
			for (j = 0; j < row; j++)		//打印下割线
			{
				printf("---");
				if (j < col - 1)
					printf("|");
			}
			printf("\n");
		}
	}
}
void intboard(char board[ROW][COL], int row, int col)
{
	int i = 0;
	for (i = 0; i < ROW; i++)
	{
		int j = 0;
		for (j = 0; j < COL; j++)
		{
			board[i][j] = ' ';
		}
	}
}
void game()
{
	char ret = 0;
	char board[ROW][COL] = { 0 };
	intboard(board,ROW,COL);
	displayboard(board, ROW, COL);
	while (1)
	{
		playerstep(board,ROW,COL);
		displayboard(board,ROW,COL);
		ret=iswin(board, ROW, COL);
		if (ret != 'C') { break; }
		botstep(board,ROW,COL);
		ret=iswin(board, ROW, COL);
		if (ret != 'C') { break; }
		displayboard(board, ROW, COL);
		
	}
	if (ret == '*') { printf("玩家胜利\n"); }
	if (ret == '#') { printf("电脑胜利\n"); }
	if (ret == 'Q') { printf("平局\n"); }

}





void menu()
{
	printf("********************\n");
	printf("***1.play  0.exit***\n");
	printf("********************\n");
}
void test()
{
	int n = 0;
	do
	{
		menu();
		printf("请选择：");
		scanf_s("%d" ,&n);
		switch (n)
		{
		case 1:
			printf("开始游戏\n");
			game();
			break;
		case 0:
			printf("退出游戏\n");
			break;
		default:
			printf("请重新选\n");
			break;
		}
	} while (n);
}
int main()
{
	test();
	return 0;
}