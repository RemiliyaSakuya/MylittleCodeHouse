leetcode原题：https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        vector<vector<int>> ret;
        //思路：判断奇数层使用栈对数据进行倒转
        if(root == nullptr)
            return ret;
        //层序遍历
        queue<TreeNode*> Q;
        Q.push(root);
        bool level=false;
        vector<int> tmp;
        while(!Q.empty())
        {
            int count = Q.size();
            //不断出队列，同时出队列的同时把出队列的当前节点的左右孩子入队
            for(int i=0;i<count;i++)
            {
                TreeNode* cur = Q.front();
                if(cur->left != nullptr)
                    Q.push(cur->left);
                if(cur->right != nullptr)
                    Q.push(cur->right);
                tmp.push_back(cur->val);
                Q.pop();
            }
            //判断是否是偶数层
            if(level == true)
            {
                //是偶数层就进行反转
                reverse(tmp.begin(),tmp.end());
                ret.push_back(tmp);
                tmp.clear();
            }
            else
            {
                ret.push_back(tmp);
                tmp.clear();
            }
            level=!level;
        }
        return ret;
    }
};