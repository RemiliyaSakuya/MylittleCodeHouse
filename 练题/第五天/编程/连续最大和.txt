#include <iostream>
#include <vector>
using namespace std;
int MAX(int a,int b)
{
    return a > b ? a : b;
}
int main()
{
    int n=0;
    cin >> n;
    vector<int> ret(n);
    for(int i=0;i<n;i++)
    {
        cin >> ret[i];
    }
    //思路：动态规划：由于整个过程是数组的遍历相加，可以看作成为不断的比较为 （(i + (i位置元素前面的所有数之和))与 (i本身)）再与 max作比较
    //找到最大的那个数，不断累积，时间复杂度：O（N）
    int max=ret[0];
    int sum=ret[0];
    int i=0;
    for(i=1;i<n;i++)
    {
        sum=MAX(sum + ret[i],ret[i]);
        if(sum > max)
        {
            max =sum;
        }
    }
    cout << max;
    return 0;
}