#include <stdio.h>
void ShellSort(long n,long* a)
{
    long gap=n;
    while(gap > 1)
    {
        gap /= 2;
        long i=0;
        for(i=0;i<n-gap;i++)
        {
            long end=i;
            long tmp = a[end+gap];
            while(end >= 0)
            {
                if(a[end] > tmp)
                {
                    a[end+gap]=a[end];
                    end-=gap;
                }
                else
                {
                    break;
                }
            }
            a[end+gap]=tmp;
        }
    }
}
int main()
{
    long n;
    scanf("%ld",&n);
    long i=0;
    long* ret=(long*)malloc(sizeof(long)*3*n);
    for(i=0;i<(3*n);i++)
    {
        scanf("%ld",&ret[i]);
    }
    ShellSort((3*n),ret);
    long sum =0;
    long index=3*n-2;
    for(long j=0;j<n;j++)
    {
        sum=sum+ret[index];
        index-=2;
    }
    printf("%ld",sum);
    return 0;
}
//思路：贪心
//通过题目我们可以得知一个3人组中的水平值是第二名的水平值，所以我们可以想到一个数组中，最大的数
//与最小的数是不可能成为水平值，故我们可以先对数组进行  排序，取 第一个数、最后一个数、倒数第二个数
//这样倒数第二个数就会成为第一组的水平值，所以只要从   倒数第二个数开始取，每次跳过2个数，一共取n次
//把每次取到的数相加就可以得出最大的水平值的和