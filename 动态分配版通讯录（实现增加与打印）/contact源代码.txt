#define _CRT_SECURE_NO_WARINGS 1
#include "contact.h"
void InitContact(Contact* ps)
{
	assert(ps);
	ps->date =(peoinfo*)calloc(Default_Size, sizeof(peoinfo));
	if (ps->date == NULL)
	{
		printf("创建失败\n");
		perror(InitContact);
		return;
	}
	ps->size = 0;
	ps->Capacity = Default_Size;
	//静态：memset(ps->date, 0, sizeof(ps->date));
}
void ADDContact(Contact* ps)
{
	assert(ps);
	if (ps->size == ps->Capacity)
	{
		peoinfo* ret=(peoinfo*)realloc(ps->date, (ps->Capacity + RellocSize) * sizeof(peoinfo));
		if (ret == NULL)
		{
			printf("扩容失败\n");
			perror("ADDContact");
			return;
		}
		ps->date = ret;
		ps->Capacity += RellocSize;
		printf("扩容成功\n");
	}
	printf("请输入名字：");
	scanf("%s", ps->date[ps->size].name );
	printf("请输入性别:");
	scanf("%s", ps->date[ps->size].sex);
	printf("请输入年龄:");
	scanf("%d", &ps->date[ps->size].age);
	printf("请输入电话号码:");
	scanf("%d", &ps->date[ps->size].tele);
	printf("请输入地址：");
	scanf("%s", ps->date[ps->size].addres);
	printf("储存成功\n");
	(ps->size)++;
 }

void PrintContact(const Contact* ps)
{
	assert(ps);
	printf("姓名\t性别\t年龄\t电话\t地址\n");
	int i = 0;
	for (i = 0; i < (ps->size); i++)
	{
		printf("%s\t%s\t%d\t%d\t%s",
			ps->date[i].name,
			ps->date[i].sex,
			ps->date[i].age,
			ps->date[i].tele,
			ps->date[i].addres);
		printf("\n");
	}
	
}
void DestoryContact(Contact* ps)
{
	free(ps->date);
	ps -> date = NULL;
	ps->size = 0;
	ps->Capacity = 0;
}
void menu()
{
	printf("******************************************\n");
	printf("******* 1. ADD            2.DELETE********\n");
	printf("********3.SEARCH          4.MODIFY********\n");
	printf("********5.SORT            6.PRINT*********\n");
	printf("********0.EXIT                  **********\n");
	printf("******************************************\n");
}